{"langchain_trace": {"_type": "wb_trace_tree", "model_hash": "ade6a04bfcdbe72a", "model_dict_dumps": "{\"1_LLMChain\": {\"inputs\": {\"topic\": \"Thanks for all the fish\", \"maincontent\": \"test\", \"outcome\": \"TEST\"}, \"outputs\": {\"text\": \"import random\\n\\ndef thanks_for_all_the_fish():\\n    fish_list = [\\\"salmon\\\", \\\"trout\\\", \\\"tuna\\\", \\\"cod\\\", \\\"bass\\\", \\\"mackerel\\\", \\\"haddock\\\"]\\n    fish = random.choice(fish_list)\\n    print(\\\"Thanks for all the\\\", fish)\\n\\nthanks_for_all_the_fish()\"}, \"_kind\": \"LLMChain\", \"llm\": {\"_kind\": \"ChatOpenAI\", \"temperature\": 0.9}, \"prompt\": {\"_kind\": \"PromptTemplate\", \"input_variables\": [\"topic\", \"maincontent\", \"outcome\"], \"template\": \"\\n            You are code generation AI proficient in Python.\\n\\n            Your task is to build a '{topic}' console-based Python app.\\n \\n            {maincontent}.\\n\\n            {outcome}:\", \"template_format\": \"f-string\"}, \"2_ChatOpenAI\": {\"inputs\": {\"prompts\": [\"Human: \\n            You are code generation AI proficient in Python.\\n\\n            Your task is to build a 'Thanks for all the fish' console-based Python app.\\n \\n            test.\\n\\n            TEST:\"]}, \"outputs\": {\"generations\": [[{\"text\": \"import random\\n\\ndef thanks_for_all_the_fish():\\n    fish_list = [\\\"salmon\\\", \\\"trout\\\", \\\"tuna\\\", \\\"cod\\\", \\\"bass\\\", \\\"mackerel\\\", \\\"haddock\\\"]\\n    fish = random.choice(fish_list)\\n    print(\\\"Thanks for all the\\\", fish)\\n\\nthanks_for_all_the_fish()\", \"generation_info\": {\"finish_reason\": \"stop\"}, \"message\": {\"_kind\": \"AIMessage\", \"content\": \"import random\\n\\ndef thanks_for_all_the_fish():\\n    fish_list = [\\\"salmon\\\", \\\"trout\\\", \\\"tuna\\\", \\\"cod\\\", \\\"bass\\\", \\\"mackerel\\\", \\\"haddock\\\"]\\n    fish = random.choice(fish_list)\\n    print(\\\"Thanks for all the\\\", fish)\\n\\nthanks_for_all_the_fish()\", \"additional_kwargs\": {}}}]], \"llm_output\": {\"token_usage\": {\"prompt_tokens\": 44, \"completion_tokens\": 69, \"total_tokens\": 113}, \"model_name\": \"gpt-3.5-turbo\"}, \"run\": null}, \"_kind\": \"ChatOpenAI\", \"temperature\": 0.9}}}", "root_span_dumps": "{\"span_id\": \"285c5e21-b9c7-4d6e-b459-63fb0fb62743\", \"name\": \"LLMChain\", \"start_time_ms\": 1696002651169, \"end_time_ms\": 1696002652776, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"execution_order\": 1}, \"results\": [{\"inputs\": {\"topic\": \"Thanks for all the fish\", \"maincontent\": \"test\", \"outcome\": \"TEST\"}, \"outputs\": {\"text\": \"import random\\n\\ndef thanks_for_all_the_fish():\\n    fish_list = [\\\"salmon\\\", \\\"trout\\\", \\\"tuna\\\", \\\"cod\\\", \\\"bass\\\", \\\"mackerel\\\", \\\"haddock\\\"]\\n    fish = random.choice(fish_list)\\n    print(\\\"Thanks for all the\\\", fish)\\n\\nthanks_for_all_the_fish()\"}}], \"child_spans\": [{\"span_id\": \"de625be9-0143-437a-a818-65588a2f6c92\", \"name\": \"ChatOpenAI\", \"start_time_ms\": 1696002651172, \"end_time_ms\": 1696002652776, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"invocation_params\": {\"model\": \"gpt-3.5-turbo\", \"model_name\": \"gpt-3.5-turbo\", \"request_timeout\": null, \"max_tokens\": null, \"stream\": false, \"n\": 1, \"temperature\": 0.9, \"_type\": \"openai-chat\", \"stop\": null}, \"options\": {\"stop\": null}, \"execution_order\": 2, \"llm_output\": {\"token_usage\": {\"prompt_tokens\": 44, \"completion_tokens\": 69, \"total_tokens\": 113}, \"model_name\": \"gpt-3.5-turbo\"}}, \"results\": [{\"inputs\": {\"prompt\": \"Human: \\n            You are code generation AI proficient in Python.\\n\\n            Your task is to build a 'Thanks for all the fish' console-based Python app.\\n \\n            test.\\n\\n            TEST:\"}, \"outputs\": {\"gen_0\": \"import random\\n\\ndef thanks_for_all_the_fish():\\n    fish_list = [\\\"salmon\\\", \\\"trout\\\", \\\"tuna\\\", \\\"cod\\\", \\\"bass\\\", \\\"mackerel\\\", \\\"haddock\\\"]\\n    fish = random.choice(fish_list)\\n    print(\\\"Thanks for all the\\\", fish)\\n\\nthanks_for_all_the_fish()\"}}], \"child_spans\": null, \"span_kind\": \"LLM\"}], \"span_kind\": \"CHAIN\"}"}, "_timestamp": 1696036853.970297, "_runtime": 5.610611200332642, "_step": 0, "_wandb": {"runtime": 4}}